// tslint:disable: no-redundant-jsdoc
export class KatexOptions {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2F0ZXgtb3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1tYXJrZG93bi8iLCJzb3VyY2VzIjpbInNyYy9rYXRleC1vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFDQUFxQztBQUNyQyxNQUFNLE9BQU8sWUFBWTtDQThFeEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0c2xpbnQ6ZGlzYWJsZTogbm8tcmVkdW5kYW50LWpzZG9jXG5leHBvcnQgY2xhc3MgS2F0ZXhPcHRpb25zIHtcbiAgICAvKipcbiAgICAgKiBJZiBgdHJ1ZWAsIG1hdGggd2lsbCBiZSByZW5kZXJlZCBpbiBkaXNwbGF5IG1vZGVcbiAgICAgKiAobWF0aCBpbiBkaXNwbGF5IHN0eWxlIGFuZCBjZW50ZXIgbWF0aCBvbiBwYWdlKVxuICAgICAqXG4gICAgICogSWYgYGZhbHNlYCwgbWF0aCB3aWxsIGJlIHJlbmRlcmVkIGluIGlubGluZSBtb2RlXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBkaXNwbGF5TW9kZT86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCBLYVRlWCB3aWxsIHRocm93IGEgYFBhcnNlRXJyb3JgIHdoZW5cbiAgICAgKiBpdCBlbmNvdW50ZXJzIGFuIHVuc3VwcG9ydGVkIGNvbW1hbmQgb3IgaW52YWxpZCBMYVRleFxuICAgICAqXG4gICAgICogSWYgYGZhbHNlYCwgS2FUZVggd2lsbCByZW5kZXIgdW5zdXBwb3J0ZWQgY29tbWFuZHMgYXNcbiAgICAgKiB0ZXh0LCBhbmQgcmVuZGVyIGludmFsaWQgTGFUZVggYXMgaXRzIHNvdXJjZSBjb2RlIHdpdGhcbiAgICAgKiBob3ZlciB0ZXh0IGdpdmluZyB0aGUgZXJyb3IsIGluIGNvbG9yIGdpdmVuIGJ5IGVycm9yQ29sb3JcbiAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICovXG4gICAgdGhyb3dPbkVycm9yPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBIENvbG9yIHN0cmluZyBnaXZlbiBpbiBmb3JtYXQgYCNYWFhgIG9yIGAjWFhYWFhYYFxuICAgICAqL1xuICAgIGVycm9yQ29sb3I/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQSBjb2xsZWN0aW9uIG9mIGN1c3RvbSBtYWNyb3MuXG4gICAgICpcbiAgICAgKiBTZWUgYHNyYy9tYWNyb3MuanNgIGZvciBpdHMgdXNhZ2VcbiAgICAgKi9cbiAgICBtYWNyb3M/OiBhbnk7XG4gICAgLyoqXG4gICAgICogSWYgYHRydWVgLCBgXFxjb2xvcmAgd2lsbCB3b3JrIGxpa2UgTGFUZVgncyBgXFx0ZXh0Y29sb3JgXG4gICAgICogYW5kIHRha2VzIDIgYXJndW1lbnRzXG4gICAgICpcbiAgICAgKiBJZiBgZmFsc2VgLCBgXFxjb2xvcmAgd2lsbCB3b3JrIGxpa2UgTGFUZVgncyBgXFxjb2xvcmBcbiAgICAgKiBhbmQgdGFrZXMgMSBhcmd1bWVudFxuICAgICAqXG4gICAgICogSW4gYm90aCBjYXNlcywgYFxcdGV4dGNvbG9yYCB3b3JrcyBhcyBpbiBMYVRlWFxuICAgICAqXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBjb2xvcklzVGV4dENvbG9yPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBbGwgdXNlci1zcGVjaWZpZWQgc2l6ZXMgd2lsbCBiZSBjYXBlZCB0byBgbWF4U2l6ZWAgZW1zXG4gICAgICpcbiAgICAgKiBJZiBzZXQgdG8gSW5maW5pdHksIHVzZXJzIGNhbiBtYWtlIGVsZW1lbnRzIGFuZCBzcGFjZVxuICAgICAqIGFyYml0cmFyaWx5IGxhcmdlXG4gICAgICpcbiAgICAgKiBAZGVmYXVsdCBJbmZpbml0eVxuICAgICAqL1xuICAgIG1heFNpemU/OiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogTGltaXQgdGhlIG51bWJlciBvZiBtYWNybyBleHBhbnNpb25zIHRvIHNwZWNpZmllZCBudW1iZXJcbiAgICAgKlxuICAgICAqIElmIHNldCB0byBgSW5maW5pdHlgLCBtYXJjbyBleHBhbmRlciB3aWxsIHRyeSB0byBmdWxseSBleHBhbmRcbiAgICAgKiBhcyBpbiBMYVRleFxuICAgICAqXG4gICAgICogQGRlZmF1bHQgMTAwMFxuICAgICAqL1xuICAgIG1heEV4cGFuZD86IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBBbGxvd2VkIHByb3RvY29scyBpbiBgXFxocmVmYFxuICAgICAqXG4gICAgICogVXNlIGBfcmVsYXRpdmVgIHRvIGFsbG93IHJlbGF0aXZlIHVybHNcbiAgICAgKlxuICAgICAqIFVzZSBgKmAgdG8gYWxsb3cgYWxsIHByb3RvY29sc1xuICAgICAqL1xuICAgIGFsbG93ZWRQcm90b2NvbHM/OiBzdHJpbmdbXTtcbiAgICAvKipcbiAgICAgKiBJZiBgZmFsc2VgIG9yIGBcImlnbm9yZVwiYCwgYWxsb3cgZmVhdHVyZXMgdGhhdCBtYWtlXG4gICAgICogd3JpdGluZyBpbiBMYVRleCBjb252ZW5pZW50IGJ1dCBub3Qgc3VwcG9ydGVkIGJ5IExhVGV4XG4gICAgICpcbiAgICAgKiBJZiBgdHJ1ZWAgb3IgYFwiZXJyb3JcImAsIHRocm93IGFuIGVycm9yIGZvciBzdWNoIHRyYW5zZ3Jlc3Npb25zXG4gICAgICpcbiAgICAgKiBJZiBgXCJ3YXJuXCJgLCB3YXJuIGFib3V0IGJlaGF2aW9yIHZpYSBgY29uc29sZS53YXJuYFxuICAgICAqXG4gICAgICogQGRlZmF1bHQgXCJ3YXJuXCJcbiAgICAgKi9cbiAgICBzdHJpY3Q/OiBib29sZWFuIHwgc3RyaW5nIHwgRnVuY3Rpb247XG59XG4iXX0=