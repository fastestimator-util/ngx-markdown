{"version":3,"file":"ngx-markdown.js","sources":["ng://ngx-markdown/src/katex-options.ts","ng://ngx-markdown/src/language.pipe.ts","ng://ngx-markdown/src/marked-options.ts","ng://ngx-markdown/src/marked-renderer.ts","ng://ngx-markdown/src/markdown.service.ts","ng://ngx-markdown/src/prism-plugin.ts","ng://ngx-markdown/src/markdown.component.ts","ng://ngx-markdown/src/markdown.pipe.ts","ng://ngx-markdown/src/markdown.module.ts"],"sourcesContent":["// tslint:disable: no-redundant-jsdoc\nexport class KatexOptions {\n    /**\n     * If `true`, math will be rendered in display mode\n     * (math in display style and center math on page)\n     *\n     * If `false`, math will be rendered in inline mode\n     * @default false\n     */\n    displayMode?: boolean;\n    /**\n     * If `true`, KaTeX will throw a `ParseError` when\n     * it encounters an unsupported command or invalid LaTex\n     *\n     * If `false`, KaTeX will render unsupported commands as\n     * text, and render invalid LaTeX as its source code with\n     * hover text giving the error, in color given by errorColor\n     * @default true\n     */\n    throwOnError?: boolean;\n    /**\n     * A Color string given in format `#XXX` or `#XXXXXX`\n     */\n    errorColor?: string;\n    /**\n     * A collection of custom macros.\n     *\n     * See `src/macros.js` for its usage\n     */\n    macros?: any;\n    /**\n     * If `true`, `\\color` will work like LaTeX's `\\textcolor`\n     * and takes 2 arguments\n     *\n     * If `false`, `\\color` will work like LaTeX's `\\color`\n     * and takes 1 argument\n     *\n     * In both cases, `\\textcolor` works as in LaTeX\n     *\n     * @default false\n     */\n    colorIsTextColor?: boolean;\n    /**\n     * All user-specified sizes will be caped to `maxSize` ems\n     *\n     * If set to Infinity, users can make elements and space\n     * arbitrarily large\n     *\n     * @default Infinity\n     */\n    maxSize?: number;\n    /**\n     * Limit the number of macro expansions to specified number\n     *\n     * If set to `Infinity`, marco expander will try to fully expand\n     * as in LaTex\n     *\n     * @default 1000\n     */\n    maxExpand?: number;\n    /**\n     * Allowed protocols in `\\href`\n     *\n     * Use `_relative` to allow relative urls\n     *\n     * Use `*` to allow all protocols\n     */\n    allowedProtocols?: string[];\n    /**\n     * If `false` or `\"ignore\"`, allow features that make\n     * writing in LaTex convenient but not supported by LaTex\n     *\n     * If `true` or `\"error\"`, throw an error for such transgressions\n     *\n     * If `\"warn\"`, warn about behavior via `console.warn`\n     *\n     * @default \"warn\"\n     */\n    strict?: boolean | string | Function;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'language',\n})\nexport class LanguagePipe implements PipeTransform {\n\n  transform(value: string, language: string): string {\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' +  value + '\\n```';\n  }\n}\n","import { MarkedRenderer } from './marked-renderer';\n\nexport class MarkedOptions {\n  /**\n   * A prefix URL for any relative link.\n   */\n  baseUrl?: string;\n\n  /**\n   * Enable GFM line breaks. This option requires the gfm option to be true.\n   */\n  breaks?: boolean;\n\n  /**\n   * Enable GitHub flavored markdown.\n   */\n  gfm?: boolean;\n\n  /**\n   * Include an id attribute when emitting headings.\n   */\n  headerIds?: boolean;\n\n  /**\n   * Set the prefix for header tag ids.\n   */\n  headerPrefix?: string;\n\n  /**\n   * Set the prefix for code block classes.\n   */\n  langPrefix?: string;\n\n  /**\n   * Mangle autolinks (<email@domain.com>).\n   */\n  mangle?: boolean;\n\n  /**\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\n   */\n  pedantic?: boolean;\n\n  /**\n   * Type: object Default: new Renderer()\n   *\n   * An object containing functions to render tokens to HTML.\n   */\n  renderer?: MarkedRenderer;\n\n  /**\n   * Sanitize the output. Ignore any HTML that has been input.\n   */\n  sanitize?: boolean;\n\n  /**\n   * Shows an HTML error message when rendering fails.\n   */\n  silent?: boolean;\n\n  /**\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\n   */\n  smartLists?: boolean;\n\n  /**\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\n   */\n  smartypants?: boolean;\n\n  /**\n   * Enable GFM tables. This option requires the gfm option to be true.\n   */\n  tables?: boolean;\n\n  /**\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\n   */\n  xhtml?: boolean;\n\n  /**\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\n   */\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\n\n  /**\n   * Optionally sanitize found HTML with a sanitizer function.\n   */\n  sanitizer?(html: string): string;\n}\n","import { Renderer } from 'marked';\n\nexport class MarkedRenderer extends Renderer { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as marked from 'marked';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { KatexOptions } from './katex-options';\nimport { MarkedOptions } from './marked-options';\nimport { MarkedRenderer } from './marked-renderer';\n\ndeclare var katex: {\n  renderToString(tex: string, options?: KatexOptions): string;\n};\n\ndeclare var Prism: {\n  highlightAllUnder: (element: Element | Document) => void;\n};\n\n// tslint:disable:max-line-length\nexport const errorKatexNotLoaded = '[ngx-markdown When using the [katex] attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the [src] attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n// tslint:enable:max-line-length\n\n@Injectable()\nexport class MarkdownService {\n\n  private _options: MarkedOptions;\n  get options(): MarkedOptions { return this._options; }\n  set options(value: MarkedOptions) {\n    this._options = Object.assign({},\n      { renderer: new MarkedRenderer() },\n      this._options,\n      value,\n    );\n  }\n\n  get renderer(): MarkedRenderer { return this.options.renderer; }\n  set renderer(value: MarkedRenderer) {\n    this.options.renderer = value;\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platform: Object,\n    @Optional() private http: HttpClient,\n    private domSanitizer: DomSanitizer,\n    options: MarkedOptions,\n  ) {\n    this.options = options;\n  }\n\n  compile(markdown: string, decodeHtml = false, markedOptions = this.options): string {\n    let precompiled = this.trimIndentation(markdown);\n    precompiled = decodeHtml ? this.decodeHtml(precompiled) : precompiled;\n    const compiled = marked.parse(precompiled, markedOptions);\n    return markedOptions.sanitize && !markedOptions.sanitizer\n      ? this.domSanitizer.sanitize(SecurityContext.HTML, compiled)\n      : compiled;\n  }\n\n  getSource(src: string): Observable<string> {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http\n      .get(src, { responseType: 'text' })\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n\n  highlight(element?: Element | Document) {\n    if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\n      if (!element) {\n        element = document;\n      }\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n      Array.prototype.forEach.call(noLanguageElements, (x: Element) => x.classList.add('language-none'));\n      Prism.highlightAllUnder(element);\n    }\n  }\n\n  renderKatex(html: string, options?: KatexOptions): string {\n    if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\n      throw new Error(errorKatexNotLoaded);\n    }\n\n    return html.replace(/\\$([^\\s\\n][^$]*?)\\$/gm, (_, tex) => katex.renderToString(tex, options));\n  }\n\n  private decodeHtml(html: string): string {\n    if (isPlatformBrowser(this.platform)) {\n      const textarea = document.createElement('textarea');\n      textarea.innerHTML = html;\n      return textarea.value;\n    }\n    return html;\n  }\n\n  private handleExtension(src: string, markdown: string): string {\n    const extension = src\n      ? src.split('?')[0].split('.').splice(-1).join()\n      : null;\n    return extension !== 'md'\n      ? '```' + extension + '\\n' + markdown + '\\n```'\n      : markdown;\n  }\n\n  private trimIndentation(markdown: string): string {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart: number;\n    return markdown\n      .split('\\n')\n      .map(line => {\n        let lineIdentStart = indentStart;\n        if (line.length > 0) {\n          lineIdentStart = isNaN(lineIdentStart)\n            ? line.search(/\\S|$/)\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\n        }\n        if (isNaN(indentStart)) {\n          indentStart = lineIdentStart;\n        }\n        return !!lineIdentStart\n          ? line.substring(lineIdentStart)\n          : line;\n      }).join('\\n');\n  }\n}\n","export enum PrismPlugin {\n  LineHighlight = 'line-highlight',\n  LineNumbers = 'line-numbers',\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { KatexOptions } from './katex-options';\nimport { MarkdownService } from './markdown.service';\nimport { PrismPlugin } from './prism-plugin';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'markdown, [markdown]',\n  template: '<ng-content></ng-content>',\n})\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\n  @Input() data: string;\n  @Input() src: string;\n\n  // Plugin - katex\n  @Input()\n  get katex(): boolean { return this._katex; }\n  set katex(value: boolean) { this._katex = this.coerceBooleanProperty(value); }\n  @Input() katexOptions: KatexOptions;\n\n  // Plugin - lineNumbers\n  @Input()\n  get lineNumbers(): boolean { return this._lineNumbers; }\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\n  @Input() start: number;\n\n  // Plugin - lineHighlight\n  @Input()\n  get lineHighlight(): boolean { return this._lineHighlight; }\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\n  @Input() line: string | string[];\n  @Input() lineOffset: number;\n\n  @Output() error = new EventEmitter<string>();\n  @Output() load = new EventEmitter<string>();\n  @Output() ready = new EventEmitter<void>();\n\n  private _katex = false;\n  private _lineHighlight = false;\n  private _lineNumbers = false;\n\n  constructor(\n    public element: ElementRef<HTMLElement>,\n    public markdownService: MarkdownService,\n  ) { }\n\n  ngOnChanges() {\n    if (this.data != null) {\n      this.handleData();\n      return;\n    }\n    if (this.src != null) {\n      this.handleSrc();\n      return;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n  }\n\n  render(markdown: string, decodeHtml = false) {\n    let compiled = this.markdownService.compile(markdown, decodeHtml);\n    compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\n    this.element.nativeElement.innerHTML = compiled;\n    this.handlePlugins();\n    this.markdownService.highlight(this.element.nativeElement);\n    this.ready.emit();\n  }\n\n  private coerceBooleanProperty(value: boolean): boolean {\n    return value != null && `${value}` !== 'false';\n  }\n\n  private handleData() {\n    this.render(this.data);\n  }\n\n  private handleSrc() {\n    this.markdownService\n      .getSource(this.src)\n      .subscribe(\n        markdown => {\n          this.render(markdown);\n          this.load.emit(markdown);\n        },\n        error => this.error.emit(error),\n      );\n  }\n\n  private handleTransclusion() {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n\n  private handlePlugins() {\n    if (this.lineHighlight) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\n    }\n  }\n\n  private setPluginClass(element: HTMLElement, plugin: string | string[]) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n\n  private setPluginOptions(element: HTMLElement, options: object) {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (!!attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n\n  private toLispCase(value: string) {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n}\n","import { ElementRef, NgZone, Pipe, PipeTransform } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { MarkdownService } from './markdown.service';\n\n@Pipe({\n  name: 'markdown',\n})\nexport class MarkdownPipe implements PipeTransform {\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private markdownService: MarkdownService,\n    private zone: NgZone,\n  ) { }\n\n  transform(value: string): string {\n    if (value == null) {\n      return '';\n    }\n\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\n      return value;\n    }\n\n    const markdown = this.markdownService.compile(value);\n\n    this.zone.onStable\n      .pipe(first())\n      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\n\n    return markdown;\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\n\nimport { LanguagePipe } from './language.pipe';\nimport { MarkdownComponent } from './markdown.component';\nimport { MarkdownPipe } from './markdown.pipe';\nimport { MarkdownService } from './markdown.service';\nimport { MarkedOptions } from './marked-options';\n\n// having a dependency on `HttpClientModule` within a library\n// breaks all the interceptors from the app consuming the library\n// here, we explicitely ask the user to pass a provider with\n// their own instance of `HttpClientModule`\nexport interface MarkdownModuleConfig {\n  loader?: Provider;\n  markedOptions?: Provider;\n}\n\nexport const initialMarkedOptions: Provider = {\n  provide: MarkedOptions,\n  useValue: {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    smartLists: true,\n    smartypants: false,\n  },\n};\n\nconst sharedDeclarations = [\n  LanguagePipe,\n  MarkdownComponent,\n  MarkdownPipe,\n];\n\n@NgModule({\n  exports: sharedDeclarations,\n  declarations: sharedDeclarations,\n})\nexport class MarkdownModule {\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {\n    return {\n      ngModule: MarkdownModule,\n      providers: [\n        MarkdownService,\n        markdownModuleConfig && markdownModuleConfig.loader || [],\n        markdownModuleConfig && markdownModuleConfig.markedOptions || initialMarkedOptions,\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: MarkdownModule,\n    };\n  }\n}\n"],"names":["tslib_1.__extends","marked.parse"],"mappings":"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"}